AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Test de deploiement depuis Codepipeline

Parameters:
  aliasName:
    Description: "The name of the alias pointing on the last working version of the Lambda function"
    Type: 'String'
    Default: "dev"

  deploymentType:
    Description: "Modalite de deploiement pour la fonction"
    Type: 'String'
    Default: "Canary10Percent5Minutes"

  fileTestInput:
    Description: "Fichier contenant le corps de la requete passee a la fonction Lambda pour son test"
    Type: 'String'
    Default: "test-input.json"

  fileTestExpected:
    Description: "Fichier contenant la chaine de ccaracteres attendue pour valider le test"
    Type: 'String'
    Default: "test-expectedResult.json"


Resources:
  deploiementJavaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: hello.handler.LambdaMethodHandler::handleRequest
      Runtime: java8

      AutoPublishAlias: !Ref: aliasName
      DeploymentPreference:
        Type: !Ref deploymentType
        Alarms:
         - !Ref LambdaErrorAlarm
        Hooks:
            PreTraffic: !Ref deploiementJavaPreTrafficHook

      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: post


  deploiementJavaPreTrafficHook:
    Type: AWS::Serverless::Function
    Properties:
      Handler: deploiementJavaPreTrafficHook.handler
      Policies:
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: !Ref deploiementJavaFunction.Version
      Runtime: nodejs6.10
      FunctionName: 'CodeDeployHook_deploiement-java_preTrafficHook'
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          CurrentVersion: !Ref deploiementJavaFunction.Version
          FunctionName: !Ref deploiementJavaFunction.FunctionName
          aliasName: !Ref aliasName
          fileTestInput: !Ref fileTestInput
          fileTestExpected: !Ref fileTestExpected

  LambdaErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
#      AlarmName: "deploiement-java-testNouvelleVersion"
#      AlarmDescription: "Alerte sur le nombre d'erreurs remontees par la nouvelle version deployee"
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: '60'
      EvaluationPeriods: '1'
      Threshold: '10'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: Resource
        Value: !Ref deploiementJavaFunction.Alias
